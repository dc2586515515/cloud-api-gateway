spring:
  application:
    name: microservice-api-gateway
server:
  port: 8050
eureka:
  instance:
    hostname: gateway
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/,http://localhost:8762/eureka/

# 下面整个树都非必须，如果不配置，将默认使用 http://GATEWAY:GATEWAY_PORT/想要访问的Eureka服务id的小写/** 路由到：http://想要访问的Eureka服务id的小写:该服务端口/**
#  例如本例中 http://localhost:8050/microservice-provider-user/1
zuul:
  routes:
    user:                   # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
      path: /user/**        # 这里即是把所有的  user/** 所有请求都转发到  microservice-provider-user 服务下
      service-id: microservice-provider-user            # Eureka中的serviceId

# 忽略某服务，不暴露
#zuul:
#  ignored-services: microservice-provider-user          # 需要忽视的服务(配置后将不会被路由)
#  routes:
#    movie:                   # 可以随便写，在zuul上面唯一即可；当这里的值 = service-id时，service-id可以不写。
#      path: /movie/**        # 这里即是把所有的  user/** 所有请求都转发到  microservice-provider-user 服务下
#      service-id: microservice-consumer-movie-ribbon-with-hystrix            # Eureka中的serviceId

# Zuul并不依赖Eureka，可以脱离Eureka运行
# 可尝试访问http://localhost:8050/user/1 ，会发现被路由到了http://localhost:8000/1
#zuul:
#  routes:
#    movie:                                              # 可以随便写
#      path: /user/**
#       # path路由到的地址，也就是访问http://localhost:8050/user/**会路由到http://localhost:8000/**
#      url: http://localhost:8000/